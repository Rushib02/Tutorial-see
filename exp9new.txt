#include <iostream>
#include <stack>
#include <cctype>

// Function to print original string followed by reversed string using stack
void printOriginalAndReversed(const std::string& input) {
    std::stack<char> charStack;

    // Push characters onto the stack
    for (char ch : input) {
        charStack.push(ch);
    }

    // Print original string
    std::cout << "Original String: " << input << std::endl;

    // Print reversed string
    std::cout << "Reversed String: ";
    while (!charStack.empty()) {
        std::cout << charStack.top();
        charStack.pop();
    }
    std::cout << std::endl;
}

// Function to check whether a given string is palindrome or not
bool isPalindrome(const std::string& input) {
    std::stack<char> charStack;

    // Push alpha-numeric characters onto the stack
    for (char ch : input) {
        if (std::isalnum(ch)) {
            charStack.push(std::tolower(ch));
        }
    }

    // Compare characters from stack with original string
    for (char ch : input) {
        if (std::isalnum(ch)) {
            if (charStack.top() != std::tolower(ch)) {
                return false; // Not a palindrome
            }
            charStack.pop();
        }
    }

    return true; // Palindrome
}

int main() {
    std::string inputString;

    // Input string from the user
    std::cout << "Enter a string: ";
    std::getline(std::cin, inputString);

    // a) Print original and reversed string
    printOriginalAndReversed(inputString);

    // b) Check whether the string is a palindrome
    if (isPalindrome(inputString)) {
        std::cout << "The entered string is a palindrome." << std::endl;
    } else {
        std::cout << "The entered string is not a palindrome." << std::endl;
    }

    return 0;
}

